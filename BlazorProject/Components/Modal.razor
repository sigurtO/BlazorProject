@inject IJSRuntime JS


@if (ShowModal)
{
    <div class="modal-overlay">
        <div class ="modal-content">
            <h3>Fill out form</h3>
            <form>  
                <label>Name:</label>
                <select @bind="Name">
                    <option value="Name1">Sigurt</option>
                    <option value="Name2">Emil</option>
                    <option value="Name3">Lukas</option>
                </select>

                <br />

                <label>Destination:</label>
                <input type="text" @bind="Destination" readonly="@(!IsUnknownDestination)" /> <!--Not readonly if Unknown selected-->


                <label>Distance (km)</label>
                <input type="number" @bind="Distance" readonly="@(!IsUnknownDestination)" />

                <button type="submit" @onclick="HandleSubmit">Submit</button>
                <button type="button" @onclick="CloseModal">Close</button>
            </form>
        </div>
    </div>

}

@code {

    [Parameter] public bool ShowModal { get; set; }
    [Parameter] public EventCallback<bool> ShowModalChanged { get; set; } //so both pages follows true/false of ShowModal
    [Parameter] public string? Destination { get; set; }
    [Parameter] public double Distance { get; set; }
    [Parameter] public bool IsUnknownDestination { get; set; }
    private string Name { get; set; }

    private async Task CloseModal()
    {
        await ShowModalChanged.InvokeAsync(false); // Notify parent to update
    }

    private async Task HandleSubmit()
    {
        var subject = Uri.EscapeDataString("Distanation submitted");
        var body = Uri.EscapeDataString(
            $"Name: {Name}\n" +
            $"Destination: {Destination}\n" +
            $"Distance: {Distance} km"
        );

        var mailtoLink = $"mailto:sigurt.olsen@gmail.com?subject={subject}&body={body}";

        await JS.InvokeVoidAsync("window.open", mailtoLink);

        await ShowModalChanged.InvokeAsync(false); // Close modal after submission
    }


}



<style>
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 5px;
        width: 300px;
    }

</style>